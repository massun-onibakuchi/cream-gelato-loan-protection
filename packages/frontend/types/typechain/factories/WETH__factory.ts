/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WETH, WETHInterface } from "../WETH";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600a8152690aee4c2e0e0cac88aa8960b31b6020808301918252835180850190945260048452630ae8aa8960e31b90840152815191929162000060916003916200007f565b508051620000769060049060208401906200007f565b50505062000162565b8280546200008d9062000125565b90600052602060002090601f016020900481019282620000b15760008555620000fc565b82601f10620000cc57805160ff1916838001178555620000fc565b82800160010185558215620000fc579182015b82811115620000fc578251825591602001919060010190620000df565b506200010a9291506200010e565b5090565b5b808211156200010a57600081556001016200010f565b6002810460018216806200013a57607f821691505b602082108114156200015c57634e487b7160e01b600052602260045260246000fd5b50919050565b610d5480620001726000396000f3fe6080604052600436106100c25760003560e01c8063395093511161007f578063a457c2d711610059578063a457c2d7146101fa578063a9059cbb1461021a578063d0e30db01461023a578063dd62ed3e14610242576100c2565b806339509351146101a557806370a08231146101c557806395d89b41146101e5576100c2565b806306fdde03146100c7578063095ea7b3146100f257806318160ddd1461011f57806323b872dd146101415780632e1a7d4d14610161578063313ce56714610183575b600080fd5b3480156100d357600080fd5b506100dc610262565b6040516100e99190610999565b60405180910390f35b3480156100fe57600080fd5b5061011261010d36600461094d565b6102f4565b6040516100e9919061098e565b34801561012b57600080fd5b50610134610311565b6040516100e99190610c87565b34801561014d57600080fd5b5061011261015c366004610912565b610317565b34801561016d57600080fd5b5061018161017c366004610976565b6103b0565b005b34801561018f57600080fd5b506101986103bd565b6040516100e99190610c90565b3480156101b157600080fd5b506101126101c036600461094d565b6103c2565b3480156101d157600080fd5b506101346101e03660046108bf565b610416565b3480156101f157600080fd5b506100dc610435565b34801561020657600080fd5b5061011261021536600461094d565b610444565b34801561022657600080fd5b5061011261023536600461094d565b6104bd565b6101816104d1565b34801561024e57600080fd5b5061013461025d3660046108e0565b6104dd565b60606003805461027190610ccd565b80601f016020809104026020016040519081016040528092919081815260200182805461029d90610ccd565b80156102ea5780601f106102bf576101008083540402835291602001916102ea565b820191906000526020600020905b8154815290600101906020018083116102cd57829003601f168201915b5050505050905090565b6000610308610301610508565b848461050c565b50600192915050565b60025490565b60006103248484846105c0565b6001600160a01b038416600090815260016020526040812081610345610508565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103915760405162461bcd60e51b815260040161038890610af9565b60405180910390fd5b6103a58561039d610508565b85840361050c565b506001949350505050565b6103ba33826106ea565b50565b601290565b60006103086103cf610508565b8484600160006103dd610508565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546104119190610c9e565b61050c565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461027190610ccd565b60008060016000610453610508565b6001600160a01b039081168252602080830193909352604091820160009081209188168152925290205490508281101561049f5760405162461bcd60e51b815260040161038890610c0b565b6104b36104aa610508565b8585840361050c565b5060019392505050565b60006103086104ca610508565b84846105c0565b6104db33346107dc565b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105325760405162461bcd60e51b815260040161038890610bc7565b6001600160a01b0382166105585760405162461bcd60e51b815260040161038890610a71565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105b3908590610c87565b60405180910390a3505050565b6001600160a01b0383166105e65760405162461bcd60e51b815260040161038890610b82565b6001600160a01b03821661060c5760405162461bcd60e51b8152600401610388906109ec565b6106178383836107d7565b6001600160a01b038316600090815260208190526040902054818110156106505760405162461bcd60e51b815260040161038890610ab3565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610687908490610c9e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106d19190610c87565b60405180910390a36106e48484846107d7565b50505050565b6001600160a01b0382166107105760405162461bcd60e51b815260040161038890610b41565b61071c826000836107d7565b6001600160a01b038216600090815260208190526040902054818110156107555760405162461bcd60e51b815260040161038890610a2f565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610784908490610cb6565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107c7908690610c87565b60405180910390a36107d7836000845b505050565b6001600160a01b0382166108025760405162461bcd60e51b815260040161038890610c50565b61080e600083836107d7565b80600260008282546108209190610c9e565b90915550506001600160a01b0382166000908152602081905260408120805483929061084d908490610c9e565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610890908590610c87565b60405180910390a36108a4600083836107d7565b5050565b80356001600160a01b038116811461043057600080fd5b6000602082840312156108d0578081fd5b6108d9826108a8565b9392505050565b600080604083850312156108f2578081fd5b6108fb836108a8565b9150610909602084016108a8565b90509250929050565b600080600060608486031215610926578081fd5b61092f846108a8565b925061093d602085016108a8565b9150604084013590509250925092565b6000806040838503121561095f578182fd5b610968836108a8565b946020939093013593505050565b600060208284031215610987578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b818110156109c5578581018301518582016040015282016109a9565b818111156109d65783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610cb157610cb1610d08565b500190565b600082821015610cc857610cc8610d08565b500390565b600281046001821680610ce157607f821691505b60208210811415610d0257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122017dcbd3b612a8f42a4167b23bfe0c05e9f633535681e9710db655c752bc20d7364736f6c63430008000033";

export class WETH__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WETH> {
    return super.deploy(overrides || {}) as Promise<WETH>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WETH {
    return super.attach(address) as WETH;
  }
  connect(signer: Signer): WETH__factory {
    return super.connect(signer) as WETH__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETHInterface {
    return new utils.Interface(_abi) as WETHInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETH {
    return new Contract(address, _abi, signerOrProvider) as WETH;
  }
}
