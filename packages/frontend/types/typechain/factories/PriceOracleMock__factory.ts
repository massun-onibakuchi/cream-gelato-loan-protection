/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PriceOracleMock,
  PriceOracleMockInterface,
} from "../PriceOracleMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract CTokenInterface",
        name: "cToken",
        type: "address",
      },
    ],
    name: "getUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract CTokenInterface",
        name: "cToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610153806100206000396000f3fe608060405234801561001057600080fd5b50600436106100355760003560e01c8062e4768b1461003a578063fc57d4df1461004f575b600080fd5b61004d6100483660046100eb565b610078565b005b61006261005d3660046100ca565b610094565b60405161006f9190610114565b60405180910390f35b6001600160a01b03909116600090815260208190526040902055565b6001600160a01b0381166000908152602081905260409020545b919050565b80356001600160a01b03811681146100ae57600080fd5b6000602082840312156100db578081fd5b6100e4826100b3565b9392505050565b600080604083850312156100fd578081fd5b610106836100b3565b946020939093013593505050565b9081526020019056fea2646970667358221220be186dbceb8c253d1393dbb6859bc60f8de236102b126ca2dc28c9e05ff12ec964736f6c63430008000033";

export class PriceOracleMock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceOracleMock> {
    return super.deploy(overrides || {}) as Promise<PriceOracleMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PriceOracleMock {
    return super.attach(address) as PriceOracleMock;
  }
  connect(signer: Signer): PriceOracleMock__factory {
    return super.connect(signer) as PriceOracleMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleMockInterface {
    return new utils.Interface(_abi) as PriceOracleMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceOracleMock {
    return new Contract(address, _abi, signerOrProvider) as PriceOracleMock;
  }
}
