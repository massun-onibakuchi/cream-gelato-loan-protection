/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type {
  CounterResolver,
  CounterResolverInterface,
} from '../CounterResolver'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_counter',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'COUNTER',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'checker',
    outputs: [
      {
        internalType: 'bool',
        name: 'canExec',
        type: 'bool',
      },
      {
        internalType: 'bytes',
        name: 'execPayload',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

const _bytecode =
  '0x60a060405234801561001057600080fd5b5060405161030e38038061030e83398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c6102796100956000396000818160710152609b01526102796000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806399b705791461003b578063cf5303cf14610059575b600080fd5b61004361006f565b60405161005091906101a6565b60405180910390f35b610061610093565b6040516100509291906101ba565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000606060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631c15ff776040518163ffffffff1660e01b815260040160206040518083038186803b1580156100f257600080fd5b505afa158015610106573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012a919061018e565b905060b46101388242610220565b1192506346d4adf260e01b60646040516024016101559190610217565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091529293915050565b60006020828403121561019f578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6000831515825260206040818401528351806040850152825b818110156101ef578581018301518582016060015282016101d3565b818111156102005783606083870101525b50601f01601f191692909201606001949350505050565b90815260200190565b60008282101561023e57634e487b7160e01b81526011600452602481fd5b50039056fea2646970667358221220e913c58c11f064d7ab1b7fe610ff83a071a7af361be3d263816342959a70b8d464736f6c63430008000033'

export class CounterResolver__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(
    _counter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CounterResolver> {
    return super.deploy(_counter, overrides || {}) as Promise<CounterResolver>
  }
  getDeployTransaction(
    _counter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_counter, overrides || {})
  }
  attach(address: string): CounterResolver {
    return super.attach(address) as CounterResolver
  }
  connect(signer: Signer): CounterResolver__factory {
    return super.connect(signer) as CounterResolver__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): CounterResolverInterface {
    return new utils.Interface(_abi) as CounterResolverInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CounterResolver {
    return new Contract(address, _abi, signerOrProvider) as CounterResolver
  }
}
