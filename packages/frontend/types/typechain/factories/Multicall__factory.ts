/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { Multicall, MulticallInterface } from '../Multicall'

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'target',
            type: 'address',
          },
          {
            internalType: 'bytes',
            name: 'callData',
            type: 'bytes',
          },
        ],
        internalType: 'struct Multicall.Call[]',
        name: 'calls',
        type: 'tuple[]',
      },
    ],
    name: 'aggregate',
    outputs: [
      {
        internalType: 'uint256',
        name: 'blockNumber',
        type: 'uint256',
      },
      {
        internalType: 'bytes[]',
        name: 'returnData',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'blockNumber',
        type: 'uint256',
      },
    ],
    name: 'getBlockHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'blockHash',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockCoinbase',
    outputs: [
      {
        internalType: 'address',
        name: 'coinbase',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockDifficulty',
    outputs: [
      {
        internalType: 'uint256',
        name: 'difficulty',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockGasLimit',
    outputs: [
      {
        internalType: 'uint256',
        name: 'gaslimit',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getCurrentBlockTimestamp',
    outputs: [
      {
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'addr',
        type: 'address',
      },
    ],
    name: 'getEthBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: 'balance',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getLastBlockHash',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'blockHash',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
]

const _bytecode =
  '0x608060405234801561001057600080fd5b5061060f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806372425d9d1161005b57806372425d9d146100e757806386d516e8146100ef578063a8b0574e146100f7578063ee82ac5e1461010c57610088565b80630f28c97d1461008d578063252dba42146100ab57806327e86d6e146100cc5780634d2301cc146100d4575b600080fd5b61009561011f565b6040516100a29190610498565b60405180910390f35b6100be6100b9366004610308565b610123565b6040516100a29291906104a1565b61009561029b565b6100956100e23660046102e7565b6102ae565b6100956102bb565b6100956102bf565b6100ff6102c3565b6040516100a29190610484565b61009561011a366004610450565b6102c7565b4290565b8051439060609067ffffffffffffffff81111561015057634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561018357816020015b606081526020019060019003908161016e5790505b50905060005b8351811015610295576000808583815181106101b557634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b03168684815181106101ea57634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516040516102039190610468565b6000604051808303816000865af19150503d8060008114610240576040519150601f19603f3d011682016040523d82523d6000602084013e610245565b606091505b50915091508161025457600080fd5b8084848151811061027557634e487b7160e01b600052603260045260246000fd5b60200260200101819052505050808061028d90610592565b915050610189565b50915091565b60006102a860014361054b565b40905090565b6001600160a01b03163190565b4490565b4590565b4190565b4090565b80356001600160a01b03811681146102e257600080fd5b919050565b6000602082840312156102f8578081fd5b610301826102cb565b9392505050565b6000602080838503121561031a578182fd5b67ffffffffffffffff8084351115610330578283fd5b8335840185601f820112610342578384fd5b803582811115610354576103546105c3565b6103618485830201610521565b81815284810190838601875b848110156104415781358601601f196040828e038201121561038d578a8bfd5b604051604081018181108b821117156103a8576103a86105c3565b6040526103b6838c016102cb565b815260408301358a8111156103c9578c8dfd5b8084019350508d603f8401126103dd578b8cfd5b8a8301358a8111156103f1576103f16105c3565b6104018c84601f84011601610521565b92508083528e6040828601011115610417578c8dfd5b80604085018d85013782018b018c9052808b0191909152855250928701929087019060010161036d565b50909998505050505050505050565b600060208284031215610461578081fd5b5035919050565b6000825161047a818460208701610562565b9190910192915050565b6001600160a01b0391909116815260200190565b90815260200190565b600060408201848352602060408185015281855180845260608601915060608382028701019350828701855b8281101561051357878603605f19018452815180518088526104f481888a01898501610562565b601f01601f1916969096018501955092840192908401906001016104cd565b509398975050505050505050565b60405181810167ffffffffffffffff81118282101715610543576105436105c3565b604052919050565b60008282101561055d5761055d6105ad565b500390565b60005b8381101561057d578181015183820152602001610565565b8381111561058c576000848401525b50505050565b60006000198214156105a6576105a66105ad565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212200c7cc51faf18b8d85a3315a38da7ee308191ec277f9dacfde10bd33ff117991c64736f6c63430008000033'

export class Multicall__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Multicall> {
    return super.deploy(overrides || {}) as Promise<Multicall>
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {})
  }
  attach(address: string): Multicall {
    return super.attach(address) as Multicall
  }
  connect(signer: Signer): Multicall__factory {
    return super.connect(signer) as Multicall__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): MulticallInterface {
    return new utils.Interface(_abi) as MulticallInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Multicall {
    return new Contract(address, _abi, signerOrProvider) as Multicall
  }
}
