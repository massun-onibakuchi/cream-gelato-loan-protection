/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TaskTreasuryMatic,
  TaskTreasuryMaticInterface,
} from "../TaskTreasuryMatic";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_gelato",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_service",
        type: "address",
      },
    ],
    name: "addWhitelistedService",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "gelato",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getCreditTokensByUser",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWhitelistedServices",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_service",
        type: "address",
      },
    ],
    name: "removeWhitelistedService",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newMaxFee",
        type: "uint256",
      },
    ],
    name: "setMaxFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "useFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516200172e3803806200172e833981016040819052610031916100ba565b61004161003c610066565b61006a565b6001805560601b6001600160601b031916608052670de0b6b3a76400006002556100e8565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100cb578081fd5b81516001600160a01b03811681146100e1578182fd5b9392505050565b60805160601c6116206200010e600039600081816104b1015261067601526116206000f3fe6080604052600436106100dd5760003560e01c8063715018a61161007f578063b47064c811610059578063b47064c81461021d578063c1461d571461023d578063c63aa02914610250578063f2fde38b14610270576100dd565b8063715018a6146101d3578063848f5f3d146101e85780638da5cb5b14610208576100dd565b8063573ea575116100bb578063573ea5751461015c5780635dfad06a1461017e5780636f192acc14610193578063710e5d2f146101b3576100dd565b806301f59d16146100e25780631c20fadd1461010d5780632bf30a0e1461012f575b600080fd5b3480156100ee57600080fd5b506100f7610290565b6040516101049190611540565b60405180910390f35b34801561011957600080fd5b5061012d61012836600461105b565b610296565b005b34801561013b57600080fd5b5061014f61014a36600461103f565b6103b4565b60405161010491906111e8565b34801561016857600080fd5b506101716104af565b6040516101049190611197565b34801561018a57600080fd5b5061014f6104d3565b34801561019f57600080fd5b5061012d6101ae3660046110e7565b61059f565b3480156101bf57600080fd5b5061012d6101ce366004611148565b6106a1565b3480156101df57600080fd5b5061012d6106e5565b3480156101f457600080fd5b5061012d61020336600461103f565b610730565b34801561021457600080fd5b506101716107a5565b34801561022957600080fd5b506100f761023836600461109b565b6107b4565b61012d61024b3660046110d3565b6107d1565b34801561025c57600080fd5b5061012d61026b36600461103f565b610a07565b34801561027c57600080fd5b5061012d61028b36600461103f565b610a79565b60025481565b600260015414156102c25760405162461bcd60e51b81526004016102b990611509565b60405180910390fd5b60026001553360009081526003602090815260408083206001600160a01b0386168452909152812054906102f68284610aea565b90506103028183611561565b3360009081526003602090815260408083206001600160a01b0389168452909152902055610331858583610b04565b81811415610354573360009081526004602052604090206103529085610bb6565b505b836001600160a01b0316336001600160a01b0316866001600160a01b03167fc322efa58c9cb2c39cfffdac61d35c8643f5cbf13c6a7d0034de2cf18923aff3846040516103a19190611540565b60405180910390a4505060018055505050565b6001600160a01b0381166000908152600460205260408120606091906103d990610bcb565b905060008167ffffffffffffffff81111561040457634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561042d578160200160208202803683370190505b50905060005b828110156104a7576001600160a01b038516600090815260046020526040902061045d9082610bd6565b82828151811061047d57634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092830291909101909101528061049f816115a4565b915050610433565b509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b606060006104e16005610bcb565b905060008167ffffffffffffffff81111561050c57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610535578160200160208202803683370190505b50905060005b828110156105985761054e600582610bd6565b82828151811061056e57634e487b7160e01b600052603260045260246000fd5b6001600160a01b039092166020928302919091019091015280610590816115a4565b91505061053b565b5091505090565b6105aa600533610be2565b6105c65760405162461bcd60e51b81526004016102b99061147a565b600254156105f0578160025410156105f05760405162461bcd60e51b81526004016102b9906112ff565b6001600160a01b03808216600090815260036020908152604080832093871683529290522054610621908390611561565b6001600160a01b038281166000908152600360209081526040808320938816835292905220819055610671576001600160a01b038116600090815260046020526040902061066f9084610bb6565b505b61069c7f00000000000000000000000000000000000000000000000000000000000000008484610b04565b505050565b6106a9610bf7565b6001600160a01b03166106ba6107a5565b6001600160a01b0316146106e05760405162461bcd60e51b81526004016102b9906113be565b600255565b6106ed610bf7565b6001600160a01b03166106fe6107a5565b6001600160a01b0316146107245760405162461bcd60e51b81526004016102b9906113be565b61072e6000610bfb565b565b610738610bf7565b6001600160a01b03166107496107a5565b6001600160a01b03161461076f5760405162461bcd60e51b81526004016102b9906113be565b61077a600582610be2565b6107965760405162461bcd60e51b81526004016102b9906112ae565b6107a1600582610bb6565b5050565b6000546001600160a01b031690565b600360209081526000928352604080842090915290825290205481565b60006001600160a01b03831673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156107ff575034610928565b6040516370a0823160e01b815283906000906001600160a01b038316906370a0823190610830903090600401611197565b60206040518083038186803b15801561084857600080fd5b505afa15801561085c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108809190611160565b90506108976001600160a01b038316333087610c4b565b6040516370a0823160e01b81526000906001600160a01b038416906370a08231906108c6903090600401611197565b60206040518083038186803b1580156108de57600080fd5b505afa1580156108f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109169190611160565b90506109228282611561565b93505050505b6001600160a01b03808516600090815260036020908152604080832093871683529290522054610959908290611549565b6001600160a01b038086166000818152600360209081526040808320948916835293815283822094909455908152600490925290206109989084610be2565b6109c0576001600160a01b03841660009081526004602052604090206109be9084610ca9565b505b80836001600160a01b0316856001600160a01b03167ff0d0e99cae184d0187b093b48894117462462379674a6e11d89c3fbb618e96b060405160405180910390a450505050565b610a0f610bf7565b6001600160a01b0316610a206107a5565b6001600160a01b031614610a465760405162461bcd60e51b81526004016102b9906113be565b610a51600582610be2565b15610a6e5760405162461bcd60e51b81526004016102b9906113f3565b6107a1600582610ca9565b610a81610bf7565b6001600160a01b0316610a926107a5565b6001600160a01b031614610ab85760405162461bcd60e51b81526004016102b9906113be565b6001600160a01b038116610ade5760405162461bcd60e51b81526004016102b990611268565b610ae781610bfb565b50565b6000818310610af95781610afb565b825b90505b92915050565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610bab576000836001600160a01b031682604051610b4290611194565b60006040518083038185875af1925050503d8060008114610b7f576040519150601f19603f3d011682016040523d82523d6000602084013e610b84565b606091505b5050905080610ba55760405162461bcd60e51b81526004016102b990611387565b5061069c565b61069c828483610cbe565b6000610afb836001600160a01b038416610cdd565b6000610afe82610dfa565b6000610afb8383610dfe565b6000610afb836001600160a01b038416610e36565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610ca3846323b872dd60e01b858585604051602401610c6c939291906111ab565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610e4e565b50505050565b6000610afb836001600160a01b038416610edd565b61069c8363a9059cbb60e01b8484604051602401610c6c9291906111cf565b60008181526001830160205260408120548015610df0576000610d01600183611561565b8554909150600090610d1590600190611561565b9050818114610d96576000866000018281548110610d4357634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905080876000018481548110610d7457634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610db557634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610afe565b6000915050610afe565b5490565b6000826000018281548110610e2357634e487b7160e01b600052603260045260246000fd5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b6000610ea3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610f279092919063ffffffff16565b80519091501561069c5780806020019051810190610ec19190611128565b61069c5760405162461bcd60e51b81526004016102b9906114bf565b6000610ee98383610e36565b610f1f57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610afe565b506000610afe565b6060610f368484600085610f40565b90505b9392505050565b606082471015610f625760405162461bcd60e51b81526004016102b990611341565b610f6b85611000565b610f875760405162461bcd60e51b81526004016102b990611443565b600080866001600160a01b03168587604051610fa39190611178565b60006040518083038185875af1925050503d8060008114610fe0576040519150601f19603f3d011682016040523d82523d6000602084013e610fe5565b606091505b5091509150610ff5828286611006565b979650505050505050565b3b151590565b60608315611015575081610f39565b8251156110255782518084602001fd5b8160405162461bcd60e51b81526004016102b99190611235565b600060208284031215611050578081fd5b8135610f39816115d5565b60008060006060848603121561106f578182fd5b833561107a816115d5565b9250602084013561108a816115d5565b929592945050506040919091013590565b600080604083850312156110ad578182fd5b82356110b8816115d5565b915060208301356110c8816115d5565b809150509250929050565b60008060006060848603121561106f578283fd5b6000806000606084860312156110fb578283fd5b8335611106816115d5565b925060208401359150604084013561111d816115d5565b809150509250925092565b600060208284031215611139578081fd5b81518015158114610f39578182fd5b600060208284031215611159578081fd5b5035919050565b600060208284031215611171578081fd5b5051919050565b6000825161118a818460208701611578565b9190910192915050565b90565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156112295783516001600160a01b031683529284019291840191600101611204565b50909695505050505050565b6000602082528251806020840152611254816040850160208701611578565b601f01601f19169190910160400192915050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526031908201527f5461736b54726561737572793a2061646457686974656c6973746564536572766040820152701a58d94e88085dda1a5d195b1a5cdd1959607a1b606082015260800190565b60208082526022908201527f5461736b54726561737572793a2075736546756e64733a204f76657263686172604082015261195960f21b606082015260800190565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b6020808252601e908201527f5f7472616e736665723a20455448207472616e73666572206661696c65640000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526030908201527f5461736b54726561737572793a2061646457686974656c69737465645365727660408201526f1a58d94e881dda1a5d195b1a5cdd195960821b606082015260800190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b60208082526025908201527f5461736b54726561737572793a206f6e6c7957686974656c6973746564536572604082015264766963657360d81b606082015260800190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b90815260200190565b6000821982111561155c5761155c6115bf565b500190565b600082821015611573576115736115bf565b500390565b60005b8381101561159357818101518382015260200161157b565b83811115610ca35750506000910152565b60006000198214156115b8576115b86115bf565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610ae757600080fdfea264697066735822122062c903ec90a4526f48095d64956db05ea35f24a9296d1f6a27f12644bef4238664736f6c63430008000033";

export class TaskTreasuryMatic__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _gelato: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TaskTreasuryMatic> {
    return super.deploy(_gelato, overrides || {}) as Promise<TaskTreasuryMatic>;
  }
  getDeployTransaction(
    _gelato: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gelato, overrides || {});
  }
  attach(address: string): TaskTreasuryMatic {
    return super.attach(address) as TaskTreasuryMatic;
  }
  connect(signer: Signer): TaskTreasuryMatic__factory {
    return super.connect(signer) as TaskTreasuryMatic__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TaskTreasuryMaticInterface {
    return new utils.Interface(_abi) as TaskTreasuryMaticInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TaskTreasuryMatic {
    return new Contract(address, _abi, signerOrProvider) as TaskTreasuryMatic;
  }
}
